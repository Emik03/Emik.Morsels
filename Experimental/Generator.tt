<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
// SPDX-License-Identifier: MPL-2.0
namespace Emik.Analyzers.Expected;

/// <summary>Generates all of the files from this project.</summary>
[Generator]
public sealed class MorselsGenerator : ISourceGenerator
{
    /// <inheritdoc />
    public void Execute(GeneratorExecutionContext context)
    {
        if (ExtensionFromLanguage(context) is not { } lang)
            return;

<#
    foreach (var file in Directory.GetFiles(Environment.CurrentDirectory, "*", SearchOption.AllDirectories))
    {
#>
        if (lang is "<#= Path.GetExtension(file) #>")
            Make(
                context,
                "Emik.Morsels<#=
                Path.GetDirectoryName(file)?.Replace(Environment.CurrentDirectory, "").Replace('/', '.').Replace('\\', '.') #>.<#= Path.GetFileNameWithoutExtension(file) #>.g<#= Path.GetExtension(file) #>",
                """"
                // <auto-generated/>
<#= string.Join("\n", File.ReadAllLines(file).Select(x => $"                {x}")) #>
                """"
            );

<#
    }
#>}

    /// <inheritdoc />
    public void Initialize(GeneratorInitializationContext context) { }

    static void Make(
        GeneratorExecutionContext context,
        [PathReference] string file,
        [StringSyntax("C#")] string content
    ) =>
        context.AddSource(file, content);

    static string? ExtensionFromLanguage(GeneratorExecutionContext context) => context.Compilation.Language switch
    {
        "C#" => ".cs",
        "F#" => ".fs",
        "Visual Basic" => ".vb",
        _ => null,
    };
}
