<!-- SPDX-License-Identifier: MPL-2.0 -->
<Project>
    <Import Condition="Exists($([MSBuild]::GetPathOfFileAbove('Directory.Build.local.props', '$(MSBuildProjectFullPath)../')))" Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.local.props', '$(MSBuildProjectFullPath)../'))"/>
    <!-- Common and/or default values. -->
    <PropertyGroup>
        <Company/>
        <Authors>Emik</Authors>
        <Nullable>enable</Nullable>
        <FileVersion>1.0</FileVersion>
        <WarningLevel>5</WarningLevel>
        <AnalysisLevel>6</AnalysisLevel>
        <RunAnalyzers>true</RunAnalyzers>
        <LangVersion>preview</LangVersion>
        <Deterministic>true</Deterministic>
        <RepositoryType>git</RepositoryType>
        <RollForward>LatestMajor</RollForward>
        <RunCodeAnalysis>false</RunCodeAnalysis>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <EnableNETAnalyzers>true</EnableNETAnalyzers>
        <AnalysisMode>AllEnabledByDefault</AnalysisMode>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <EnablePreviewFeatures>false</EnablePreviewFeatures>
        <CodeAnalysisForceOutput>true</CodeAnalysisForceOutput>
        <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
        <RunAnalyzersDuringBuild>true</RunAnalyzersDuringBuild>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <CheckForOverflowUnderflow>false</CheckForOverflowUnderflow>
        <PackageLicenseExpression>MPL-2.0</PackageLicenseExpression>
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        <FodyDependsOnTargets>RunConstructorTests</FodyDependsOnTargets>
        <RunAnalyzersDuringLiveAnalysis>true</RunAnalyzersDuringLiveAnalysis>
        <DefaultDocumentationFolder>Documentation</DefaultDocumentationFolder>
        <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
        <Copyright>Copyright Â© Emik $([System.DateTime]::Now.ToString('yyyy'))</Copyright>
        <DefaultDocumentationFileNameFactory>Morsels</DefaultDocumentationFileNameFactory>
        <PathMap>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)'))=./</PathMap>
        <DefaultDocumentationInvalidCharReplacement>-</DefaultDocumentationInvalidCharReplacement>
        <ArtifactsPath>$([System.IO.Path]::GetFullPath('$(MSBuildProjectFullPath)../../artifacts'))</ArtifactsPath>
        <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>none</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>
        <DefaultDocumentationGeneratedAccessModifiers>Public,Protected,ProtectedInternal</DefaultDocumentationGeneratedAccessModifiers>
        <SignAssembly Condition="Exists($([MSBuild]::GetPathOfFileAbove('private.snk', '$(MSBuildProjectFullPath)../')))">true</SignAssembly>
        <AssemblyOriginatorKeyFile Condition="Exists($([MSBuild]::GetPathOfFileAbove('private.snk', '$(MSBuildProjectFullPath)../')))">$([MSBuild]::GetPathOfFileAbove('private.snk', '$(MSBuildProjectFullPath)../'))</AssemblyOriginatorKeyFile>
        <NoWarn>253;436;1701;1702;3019;8002;8632;AOT0001;AOT0002;ASYNC0004;CA1043;CA1046;CA1055;CA1062;CA1303;CA1305;CA1307;CA1309;CA1310;CA1704;CA1709;CA1711;CA1812;CA1813;CA1822;CA2007;CA2201;CA2204;CA2225;CA5394;DOC203;GU0009;GU0011;GU0017;GU0073;IDE0052;IDE0290;InvalidGlobalSectionName;NETSDK1138;MA0001;MA0004;MA0006;MA0009;MA0011;MA0023;MA0029;MA0046;MA0071;MA0074;MA0076;MA0077;SA1000;SA1002;SA1008;SA1009;SA1010;SA1011;SA1012;SA1013;SA1101;SA1111;SA1118;SA1122;SA1124;SA1132;SA1133;SA1134;SA1135;SA1200;SA1201;SA1202;SA1205;SA1206;SA1308;SA1309;SA1311;SA1313;SA1400;SA1402;SA1407;SA1408;SA1414;SA1500;SA1501;SA1502;SA1503;SA1512;SA1513;SA1516;SA1519;SA1520;SA1633;SA1648;SA1649;NU1701;RCS1001;RCS1003;RCS1080;RCS1084;RCS1123;RCS1169;RCS1194;RCS1213;RCS1233;RCS1247;RS1035;UEA0006</NoWarn>
    </PropertyGroup>
    <!-- Fallback paths. -->
    <PropertyGroup>
        <Morsels Condition="$(Morsels) == '' and Exists('Emik.Morsels/')">Emik.Morsels/</Morsels>
        <Morsels Condition="$(Morsels) == '' and Exists('../Emik.Morsels/')">../Emik.Morsels/</Morsels>
        <Morsels Condition="$(Morsels) == '' and Exists('../../Emik.Morsels/')">../../Emik.Morsels/</Morsels>
        <Morsels Condition="$(Morsels) == '' and Exists('../../../Emik.Morsels/')">../../../Emik.Morsels/</Morsels>
        <Morsels Condition="$(Morsels) == '' and Exists('../../../../Emik.Morsels/')">../../../../Emik.Morsels/</Morsels>
        <Unity Condition="$(Unity) == '' and Exists('$(HOME)/Unity/Hub/Editor/')">$([System.IO.Directory]::GetDirectories('$(HOME)/Unity/Hub/Editor/')[0])</Unity>
        <Celeste Condition="$(Celeste) == '' and Exists('$(HOME)/.steam/steam/steamapps/common/Celeste/')">$(HOME)/.steam/steam/steamapps/common/Celeste/</Celeste>
        <Unity Condition="$(Unity) == '' and Exists('/Applications/Unity/Hub/Editor/')">$([System.IO.Directory]::GetDirectories('/Applications/Unity/Hub/Editor/')[0])</Unity>
        <Celeste Condition="$(Celeste) == '' and Exists('$(HOME)/.local/share/Steam/steamapps/common/Celeste/')">$(HOME)/.local/share/Steam/steamapps/common/Celeste/</Celeste>
        <Celeste Condition="$(Celeste) == '' and Exists('C:\Program Files (x86)\Steam\steamapps\common\Celeste\')">C:\Program Files (x86)\Steam\steamapps\common\Celeste\</Celeste>
        <Unity Condition="$(Unity) == '' and Exists('C:\Program Files\Unity\Hub\Editor\')">$([System.IO.Directory]::GetDirectories('C:\Program Files\Unity\Hub\Editor\')[0])</Unity>
        <Celeste Condition="$(Celeste) == '' and Exists('~/Library/Application Support/Steam/steamapps/common/Celeste/')">~/Library/Application Support/Steam/steamapps/common/Celeste/</Celeste>
        <Ktane Condition="$(Ktane) == '' and Exists('$(HOME)/.steam/steam/steamapps/common/Keep Talking and Nobody Explodes/')">$(HOME)/.steam/steam/steamapps/common/Keep Talking and Nobody Explodes/</Ktane>
        <Ktane Condition="$(Ktane) == '' and Exists('$(HOME)/.local/share/Steam/steamapps/common/Keep Talking and Nobody Explodes/')">$(HOME)/.local/share/Steam/steamapps/common/Keep Talking and Nobody Explodes/</Ktane>
        <Ktane Condition="$(Ktane) == '' and Exists('C:\Program Files (x86)\Steam\steamapps\common\Keep Talking and Nobody Explodes\')">C:\Program Files (x86)\Steam\steamapps\common\Keep Talking and Nobody Explodes\</Ktane>
        <Ktane Condition="$(Ktane) == '' and Exists('~/Library/Application Support/Steam/steamapps/common/Keep Talking and Nobody Explodes/')">~/Library/Application Support/Steam/steamapps/common/Keep Talking and Nobody Explodes/</Ktane>
    </PropertyGroup>
    <!-- Ensure that the path is not relative, escaping all instances of "..", which is necessary if through a symlink. -->
    <PropertyGroup Condition="!$([System.IO.Path]::IsPathRooted('$(Morsels)'))">
        <Morsels>$([System.IO.Path]::GetFullPath('$(MSBuildProjectFullPath)../../$(Morsels)'))</Morsels>
    </PropertyGroup>
    <!-- F# exclusive properties. -->
    <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.fsproj'">
        <TailCalls>true</TailCalls>
        <DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>
    </PropertyGroup>
    <!-- Sets the icon of the package, if it exists. -->
    <PropertyGroup Condition="Exists('Images/icon.png')">
        <PackageIcon>icon.png</PackageIcon>
    </PropertyGroup>
    <!-- Ensures the image is packaged, if it exists. -->
    <ItemGroup Condition="Exists('Images/icon.png')">
        <None Include="Images/icon.png" Link="Images/icon.png" Pack="true" PackagePath="/"/>
    </ItemGroup>
    <!-- Show implicitly added files on Solution Explorer. -->
    <ItemGroup>
        <AdditionalFiles Include="$(Morsels)/Content/Properties/**" Link="Properties/**"/>
        <Content Include="$(Morsels)/Content/Properties/**" Link="Properties/**" Pack="false"/>
        <None Include="$([MSBuild]::GetPathOfFileAbove('README.md', '$(MSBuildProjectFullPath)../'))" Link="README.md" Pack="true" PackagePath="/"/>
    </ItemGroup>
    <!-- Set .globalconfig to the proper tag. -->
    <ItemGroup>
        <Content Remove="$(Morsels)/Content/Properties/.globalconfig"/>
        <AdditionalFiles Remove="$(Morsels)/Content/Properties/.globalconfig"/>
        <GlobalAnalyzerConfigFiles Include="$(Morsels)/Content/Properties/.globalconfig" Link="Properties/.globalconfig"/>
    </ItemGroup>
    <!-- C# code snippets for C# projects. -->
    <ItemGroup Condition="'$(MSBuildProjectExtension)' == '.csproj'">
        <Compile Include="$(Morsels)/Compile/**/*.cs"/>
    </ItemGroup>
    <!-- F# code snippets for F# projects. -->
    <ItemGroup Condition="'$(MSBuildProjectExtension)' == '.fsproj'">
        <Compile Include="$(Morsels)/Compile/**/*.fs" Link="Source/Emik.Morsels/*.fs"/>
    </ItemGroup>
    <!-- Fody references that target any framework. -->
    <ItemGroup>
        <PackageReference Include="Fody" Version="6.8.0" PrivateAssets="all"/>
        <PackageReference Include="AsyncFixer" Version="1.6.0" PrivateAssets="all"/>
        <PackageReference Include="Equals.Fody" Version="4.0.2" PrivateAssets="all"/>
        <PackageReference Include="InfoOf.Fody" Version="2.1.1" PrivateAssets="all"/>
        <PackageReference Include="Absence.Fody" Version="1.0.5" PrivateAssets="all"/>
        <PackageReference Include="CsharpMacros" Version="2.3.5" PrivateAssets="all"/>
        <PackageReference Include="Caseless.Fody" Version="1.9.1" PrivateAssets="all"/>
        <PackageReference Include="ILMerge.Fody" Version="1.24.0" PrivateAssets="all"/>
        <PackageReference Include="InlineIL.Fody" Version="1.7.4" PrivateAssets="all"/>
        <PackageReference Include="NullGuard.Fody" Version="3.1.1" PrivateAssets="all"/>
        <PackageReference Include="ToString.Fody" Version="1.11.1" PrivateAssets="all"/>
        <PackageReference Include="UnitGenerator" Version="1.4.10" PrivateAssets="all"/>
        <PackageReference Include="LocalsInit.Fody" Version="1.1.0" PrivateAssets="all"/>
        <PackageReference Include="Substitute.Fody" Version="1.6.0" PrivateAssets="all"/>
        <PackageReference Include="Virtuosity.Fody" Version="3.1.1" PrivateAssets="all"/>
        <PackageReference Include="Asyncify" Version="0.9.5707.38527" PrivateAssets="all"/>
        <PackageReference Include="InlineMethod.Fody" Version="0.6.2" PrivateAssets="all"/>
        <PackageReference Include="Meziantou.Analyzer" Version="2.0.66" PrivateAssets="all"/>
        <PackageReference Include="ReflectionAnalyzers" Version="0.3.1" PrivateAssets="all"/>
        <PackageReference Include="GlobalUsingsAnalyzer" Version="1.4.0" PrivateAssets="all"/>
        <PackageReference Include="IDisposableAnalyzers" Version="4.0.6" PrivateAssets="all"/>
        <PackageReference Include="Roslynator.Analyzers" Version="4.3.0" PrivateAssets="all"/>
        <PackageReference Include="PrecompiledRegex.Fody" Version="1.0.0" PrivateAssets="all"/>
        <PackageReference Include="Collections.Analyzer" Version="0.2.8.1" PrivateAssets="all"/>
        <PackageReference Include="Emik.Analyzers.Matches" Version="1.2.0" PrivateAssets="all"/>
        <PackageReference Include="Scifa.CheckedExceptions" Version="1.0.14" PrivateAssets="all"/>
        <PackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.507" PrivateAssets="all"/>
        <PackageReference Include="Emik.SourceGenerators.Tattoo" Version="1.0.1.1" PrivateAssets="all"/>
        <PackageReference Include="Roslynator.CodeAnalysis.Analyzers" Version="4.3.0" PrivateAssets="all"/>
        <PackageReference Include="Dwaas.Param.Documentation.Analyzer" Version="1.0.6258.29691" PrivateAssets="all"/>
        <PackageReference Include="Microsoft.VisualStudio.Threading.Analyzers" Version="17.6.40" PrivateAssets="all"/>
        <PackageReference Include="DotNetAnalyzers.DocumentationAnalyzers" Version="1.0.0-beta.59" PrivateAssets="all"/>
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.5-beta1.23320.2" PrivateAssets="all"/>
        <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="8.0.0-preview1.23165.1" PrivateAssets="all"/>
        <PackageReference Include="Microsoft.CodeAnalysis.BannedApiAnalyzers" Version="3.3.5-beta1.23320.2" PrivateAssets="all"/>
    </ItemGroup>
    <!-- Community Toolkit starts at .NET Standard 2.0. -->
    <ItemGroup Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netstandard2.0'))">
        <PackageReference Include="CommunityToolkit.Common" Version="8.2.1" PrivateAssets="all"/>
        <PackageReference Include="CommunityToolkit.Diagnostics" Version="8.2.1" PrivateAssets="all"/>
        <PackageReference Include="CommunityToolkit.HighPerformance" Version="8.2.1" PrivateAssets="all"/>
    </ItemGroup>
    <!-- JetBrains.Annotations doesn't blend very well with F#. -->
    <ItemGroup Condition="'$(MSBuildProjectExtension)' != '.fsproj'">
        <PackageReference Include="ReSharper.ExportAnnotations.Task" Version="1.4.0" PrivateAssets="all"/>
        <PackageReference Include="JetBrains.Annotations" Version="2023.2.0" PrivateAssets="all" IncludeAssets="compile"/>
    </ItemGroup>
    <!-- F# latest for .NET Framework 2.0 - 4.6. -->
    <ItemGroup Condition="'$(MSBuildProjectExtension)' == '.fsproj' and $([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net20')) and !$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net461'))">
        <PackageReference Include="FSharp.Core" Version="4.1.18"/>
    </ItemGroup>
    <!-- F# latest for .NET Framework 4.6.1+. -->
    <ItemGroup Condition="'$(MSBuildProjectExtension)' == '.fsproj' and $([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net461')) and !$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netstandard2.0'))">
        <PackageReference Include="FSharp.Core" Version="4.7.2"/>
    </ItemGroup>
    <!-- F# latest for .NET Core. -->
    <ItemGroup Condition="'$(MSBuildProjectExtension)' == '.fsproj' and $([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netstandard2.0'))">
        <PackageReference Include="FSharp.Core" Version="8.0.100-beta.23327.15"/>
    </ItemGroup>
    <!-- Does not work on .NET Framework 4.5.1 or less. -->
    <ItemGroup Condition="'$(MSBuildProjectExtension)' == '.fsproj' and $([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net452'))">
        <PackageReference Include="Doctest" Version="0.0.6" PrivateAssets="all"/>
    </ItemGroup>
    <!-- Nullable Reference Types and Record support for Low .NET Framework versions. -->
    <ItemGroup Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net20')) and !$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net40'))">
        <Reference Include="System" Private="false"/>
        <PackageReference Include="Divorce.Fody" Version="1.0.5" PrivateAssets="all"/>
        <Reference Include="mscorlib" Aliases="global, ms" HintPath="$(Morsels)/References/mscorlib.dll" Private="false"/>
    </ItemGroup>
    <!-- F# expects a System.Numerics file which doesn't exist normally. -->
    <ItemGroup Condition="'$(MSBuildProjectExtension)' == '.fsproj' and $([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net35')) and !$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net40'))">
        <Reference Include="System.Numerics" HintPath="$(Morsels)/References/System.Numerics.dll" Private="false"/>
    </ItemGroup>
    <!-- Does not work on .NET Framework 3.5 or less. -->
    <ItemGroup Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net40')) or $([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netstandard1.0'))">
        <PackageReference Include="Lazy.Fody" Version="1.11.0" PrivateAssets="all"/>
    </ItemGroup>
    <!-- Does not work on .NET Framework 4.0 or less. -->
    <ItemGroup Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'netstandard1.0'))">
        <PackageReference Include="ConfigureAwait.Fody" Version="3.3.2" PrivateAssets="all"/>
    </ItemGroup>
</Project>
